
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
	
		СформироватьДвиженияОсновныеНачисления();
		СформироватьДвиженияУдержания();
		
		Движения.ВКМ_ОсновныеНачисления.Записать();	
		Движения.ВКМ_Удержания.Записать();
		
		
		РассчитатьОклад();
		РассчитатьПремиюЗаВыполненныеРаботы();
		РассчитатьОтпуск();
		РассчитатьУдержания();
		
		СформироватьДвижениПоРегиструВзаиморасчетыССотрудниками();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвиженияОсновныеНачисления()
	
	// регистр ОсновныеНачисления
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.Сотрудник,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ВидРасчета,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаОкончания,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ГрафикРабот,
		|	НАЧАЛОПЕРИОДА(BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала, МЕСЯЦ) КАК Период
		|ПОМЕСТИТЬ ВТ_Док
		|ИЗ
		|	Документ.BKM_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК BKM_НачислениеЗаработнойПлатыОсновныеНачисления
		|ГДЕ
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.Ссылка = &Ссылка
		|	И BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ВидРасчета = &ВидРасчетаОклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Док.Сотрудник,
		|	ВТ_Док.ВидРасчета,
		|	ВТ_Док.ДатаНачала,
		|	ВТ_Док.ДатаОкончания,
		|	0 КАК ГрафикРабот,
		|	ЕСТЬNULL(BKM_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
		|	ВТ_Док.ГрафикРабот КАК БазоыйПериодНачало,
		|	0 КАК БазовыйПериодКонец,
		|	NULL,
		|	NULL
		|ИЗ
		|	ВТ_Док КАК ВТ_Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.BKM_УсловияОплатыСотрудников.СрезПоследних КАК
		|			BKM_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_Док.Сотрудник = BKM_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.Сотрудник,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ВидРасчета,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаОкончания,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ГрафикРабот,
		|	0,
		|	NULL,
		|	NULL,
		|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала, МЕСЯЦ, -12), МЕСЯЦ),
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ)
		|ИЗ
		|	Документ.BKM_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК BKM_НачислениеЗаработнойПлатыОсновныеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.Сотрудник,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ВидРасчета,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала,
		|	BKM_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаОкончания,
		|	0,
		|	0,
		|	0,
		|	0,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.BKM_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК BKM_НачислениеЗаработнойПлатыОсновныеНачисления";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ВидРасчетаПроцентЗаВыполненныеРаботы", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаВыполненныеРаботы);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ПериодРегистрации = Дата;
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Движение.Оклад = Выборка.Оклад;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДвиженияУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка= Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		    Движение = Движения.ВКМ_Удержания.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			Движение.ПериодРегистрации = Дата;
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		КонецЦикла;

КонецПроцедуры

Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &ВидРасчетаОклад
		|	И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ОтработаноДней = Выборка.Факт;
		Движение.РабочихДней = Выборка.План;
		
		Если Выборка.План <> 0 Тогда
			Движение.Результат = Движение.Оклад / Выборка.План * Выборка.Факт;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьПремиюЗаВыполненныеРаботы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты1.Сотрудник,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты1.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты1,
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|	И ВидРасчета = &ВидРасчетаПремияЗаВыполненныеРаботы) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ВидРасчетаПремияЗаВыполненныеРаботы", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаВыполненныеРаботы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.ПремияЗаВыполненныеРаботы;
			
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало,
		|		ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ) КАК ДнейОтпуска
		|ПОМЕСТИТЬ ВТ_ДнейОтпуска
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|	И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДней,
		|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза КАК Результат
		|ПОМЕСТИТЬ ВТ_ОкладЗаПериод
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|		ВидРасчета = &ВидРасчетаОтпуск
		|	И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДнейОтпуска.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДнейОтпуска.ДнейОтпуска КАК ДнейОтпуска,
		|	ВЫРАЗИТЬ(ВТ_ОкладЗаПериод.Результат / ВТ_ОкладЗаПериод.ОтработаноДней * ВТ_ДнейОтпуска.ДнейОтпуска КАК ЧИСЛО(15,
		|		2)) КАК Отпускные
		|ИЗ
		|	ВТ_ДнейОтпуска КАК ВТ_ДнейОтпуска
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОкладЗаПериод КАК ВТ_ОкладЗаПериод
		|		ПО ВТ_ДнейОтпуска.НомерСтроки = ВТ_ОкладЗаПериод.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ДнейОтпуска = Выборка.ДнейОтпуска;
		Движение.Результат = Выборка.Отпускные;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);

КонецПроцедуры

Процедура РассчитатьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) * 0.13 КАК Результат
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,, Регистратор = &Ссылка) КАК
		|		ВКМ_УдержанияБазаВКМ_ОсновныеНачисления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.Результат;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьДвижениПоРегиструВзаиморасчетыССотрудниками()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0) КАК Результат
		|ПОМЕСТИТЬ ВТ_Начисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.Активность
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник,
		|	ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0)
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ДополнительныеНачисления.Активность
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник,
		|	ЕСТЬNULL(-ВКМ_Удержания.Результат, 0)
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_Удержания.Активность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Начисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_Начисления.Результат) КАК Сумма
		|ИЗ
		|	ВТ_Начисления КАК ВТ_Начисления
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Начисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		ЗаполнитьЗначенияСвойств(Движение,Выборка);
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
КонецПроцедуры

#КонецОбласти